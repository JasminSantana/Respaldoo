package view;

import com.mysql.jdbc.ResultSetMetaData;
import dao.AccessMySQL;
import dao.PedidoDAO;
import dao.pedido;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Pedido;
import model.Usuario;

/**
 *
 * @author Santana Mares Jasmin Aide sant.mar.1997@gmail.com
 */
public class ViewPedidos extends javax.swing.JFrame {

    private PedidoDAO dao = new PedidoDAO();

    private String query = "SELECT MAX(cvePedido) + 1 as maximo FROM pedido";

    public ViewPedidos() {

        try {
            initComponents();
            initCombos();

            setSize(new java.awt.Dimension(500, 400));
            List<Usuario> lista = dao.getListaUsuario();
            cboUsuario.removeAllItems();
            for (Usuario usuario : lista) {

                cboUsuario.addItem(usuario.getNombreUsuario() + "" + usuario.getApPat() + " " + usuario.getApMat());
            }

            cboUsuario1.removeAllItems();
            for (Usuario usuario : lista) {

                cboUsuario1.addItem(usuario.getNombreUsuario() + "" + usuario.getApPat() + " " + usuario.getApMat());
            }

            Connection con = AccessMySQL.getInstance().getConnection();
            Statement st = con.createStatement();
            ResultSet rst = st.executeQuery(query);

            if (rst.next()) {
                txtClave.setText(rst.getString("maximo"));
                
            } else {
                txtClave.setText("1");
               
            }
      

            //obtener la fecha actual
            txtFecha.setText(fechaActual());
            //para el panel modificar
            txtFecha1.setText(fechaActual());
        } catch (SQLException ex) {
            Logger.getLogger(ViewPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void initCombos() {

        cboColonia.setModel(new DefaultComboBoxModel<>(new String[]{
            "Seleccione la Colonia", "Dolores Hidalgo", "El pipila", "San Cristobal",
            "Adjuntas del Rio", "15 de Septiembre", "Lindavista", "Arboledas", "Fracc. Guanajuato",
            "Valle verde", "San Pablo", "San Agustin"
        }));
        //para llenar cbo del panel modicar
        cboColonia1.setModel(new DefaultComboBoxModel<>(new String[]{
            "Seleccione la Colonia", "Dolores Hidalgo", "El pipila", "San Cristobal",
            "Adjuntas del Rio", "15 de Septiembre", "Lindavista", "Arboledas", "Fracc. Guanajuato",
            "Valle verde", "San Pablo", "San Agustin"
        }));

    }

    public static String fechaActual() {
        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("YYYY-MM-dd");
        return formatoFecha.format(fecha);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblEstatus = new javax.swing.JLabel();
        panBoton = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnPModi = new javax.swing.JButton();
        panCards = new javax.swing.JPanel();
        panAgregar = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCalle = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboColonia = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cboUsuario = new javax.swing.JComboBox();
        panEliminar = new javax.swing.JPanel();
        panModificar = new javax.swing.JPanel();
        lblClave = new javax.swing.JLabel();
        txtClave1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtFecha1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCalleM = new javax.swing.JScrollPane();
        txtCalle1 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        txtNumero1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cboColonia1 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        cboUsuario1 = new javax.swing.JComboBox();
        panListar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblePedidos = new javax.swing.JTable();
        panEstatus = new javax.swing.JPanel();
        panOperadores = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Javanese Text", 0, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 0, 204));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Administracion de Pedidos");
        lblTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblTitulo, java.awt.BorderLayout.PAGE_START);

        lblEstatus.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        lblEstatus.setForeground(new java.awt.Color(0, 0, 204));
        lblEstatus.setText("Estatus");
        getContentPane().add(lblEstatus, java.awt.BorderLayout.PAGE_END);

        panBoton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panBoton.setLayout(new javax.swing.BoxLayout(panBoton, javax.swing.BoxLayout.Y_AXIS));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        btnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnAgregarKeyTyped(evt);
            }
        });
        panBoton.add(btnAgregar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        panBoton.add(btnEliminar);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        panBoton.add(btnModificar);

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        panBoton.add(btnListar);

        btnPModi.setText("PanelModif.");
        btnPModi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPModiActionPerformed(evt);
            }
        });
        panBoton.add(btnPModi);

        getContentPane().add(panBoton, java.awt.BorderLayout.LINE_END);

        panCards.setLayout(new java.awt.CardLayout());

        panAgregar.setLayout(new java.awt.GridLayout(6, 2));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("Clave");
        panAgregar.add(jLabel3);

        txtClave.setEditable(false);
        panAgregar.add(txtClave);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 51));
        jLabel4.setText("Fecha");
        panAgregar.add(jLabel4);

        txtFecha.setEditable(false);
        panAgregar.add(txtFecha);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 51));
        jLabel5.setText("Calle");
        panAgregar.add(jLabel5);

        txtCalle.setColumns(20);
        txtCalle.setRows(5);
        txtCalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtCalle);

        panAgregar.add(jScrollPane1);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 51));
        jLabel6.setText("NÃºmero");
        panAgregar.add(jLabel6);

        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });
        panAgregar.add(txtNumero);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 51));
        jLabel7.setText("Colonia");
        panAgregar.add(jLabel7);

        panAgregar.add(cboColonia);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 51));
        jLabel8.setText("Usuario");
        panAgregar.add(jLabel8);

        panAgregar.add(cboUsuario);

        panCards.add(panAgregar, "card2");

        javax.swing.GroupLayout panEliminarLayout = new javax.swing.GroupLayout(panEliminar);
        panEliminar.setLayout(panEliminarLayout);
        panEliminarLayout.setHorizontalGroup(
            panEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panEliminarLayout.setVerticalGroup(
            panEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panCards.add(panEliminar, "card3");

        panModificar.setLayout(new java.awt.GridLayout(6, 2));

        lblClave.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblClave.setForeground(new java.awt.Color(204, 0, 51));
        lblClave.setText("Clave");
        panModificar.add(lblClave);
        panModificar.add(txtClave1);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 51));
        jLabel10.setText("Fecha");
        panModificar.add(jLabel10);

        txtFecha1.setEditable(false);
        panModificar.add(txtFecha1);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 51));
        jLabel11.setText("Calle");
        panModificar.add(jLabel11);

        txtCalle1.setColumns(20);
        txtCalle1.setRows(5);
        txtCalle1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalle1KeyTyped(evt);
            }
        });
        txtCalleM.setViewportView(txtCalle1);

        panModificar.add(txtCalleM);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 51));
        jLabel12.setText("NÃºmero");
        panModificar.add(jLabel12);

        txtNumero1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero1KeyTyped(evt);
            }
        });
        panModificar.add(txtNumero1);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 51));
        jLabel13.setText("Colonia");
        panModificar.add(jLabel13);

        panModificar.add(cboColonia1);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 0, 51));
        jLabel14.setText("Usuario");
        panModificar.add(jLabel14);

        panModificar.add(cboUsuario1);

        panCards.add(panModificar, "card4");

        panListar.setLayout(new java.awt.CardLayout());

        tblePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(tblePedidos);

        panListar.add(jScrollPane2, "card2");

        panCards.add(panListar, "card5");

        getContentPane().add(panCards, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout panEstatusLayout = new javax.swing.GroupLayout(panEstatus);
        panEstatus.setLayout(panEstatusLayout);
        panEstatusLayout.setHorizontalGroup(
            panEstatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panEstatusLayout.setVerticalGroup(
            panEstatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(panEstatus, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout panOperadoresLayout = new javax.swing.GroupLayout(panOperadores);
        panOperadores.setLayout(panOperadoresLayout);
        panOperadoresLayout.setHorizontalGroup(
            panOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panOperadoresLayout.setVerticalGroup(
            panOperadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(panOperadores, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            CardLayout layout = (CardLayout) (panCards.getLayout());
            layout.show(panCards, "card2");
            AccessMySQL objCon = AccessMySQL.getInstance();
            //Paso 1 obtener la conexion
            Connection con = objCon.getConnection();
          //Paso 2 Crear un enunciado

            String clave, fechaP, call, num, coloni, nombrer;
            clave = txtClave.getText();
            fechaP = txtFecha.getText();
            call = txtCalle.getText();
            num = txtNumero.getText();
            coloni = (String) cboColonia.getSelectedItem();

            nombrer = (String) cboUsuario.getSelectedItem();
            String nombreU = "", paterno = "", materno = "";
            List<Usuario> lista = dao.getListaUsuario();
            cboUsuario.removeAllItems();
            for (Usuario usuario : lista) {
                nombreU = usuario.getNombreUsuario();
                paterno = usuario.getApPat();
                materno = usuario.getApMat();
                cboUsuario.addItem(usuario.getNombreUsuario() + "" + usuario.getApPat() + " " + usuario.getApMat());
            }
            ///comparar valores para extraer clave a insertar
            String usuario = "SELECT IDusuario FROM usuario WHERE nombreUsuario='" + nombreU + "' AND apPat='" + paterno + "' AND apMat='" + materno + "' ";

            Statement st = con.createStatement();
            ResultSet rst = st.executeQuery(usuario);

            if (rst.next()) {
                String pr = rst.getString("IDusuario");
                System.out.println("" + pr);
                String insert = "INSERT INTO pedido (cvePedido,fechaPedido, "
                        + "calle,numero,colonia,IDusuario) "
                        + " VALUES (?,?,?,?,?,?)";
                PreparedStatement stmt = con.prepareStatement(insert);
                stmt.setString(1, clave);
                stmt.setString(2, fechaP);
                stmt.setString(3, call);
                stmt.setString(4, num);
                stmt.setString(5, coloni);
                stmt.setString(6, pr);
                stmt.executeUpdate();

            }

        } catch (SQLException ex) {
            Logger.getLogger(ViewPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAgregarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAgregarKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_btnAgregarKeyTyped

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            CardLayout layout = (CardLayout) panCards.getLayout();
            layout.show(panCards, "card3");
            AccessMySQL objCon = AccessMySQL.getInstance();
//            //Paso 1 obtener la conexion
            Connection con = objCon.getConnection();
            
         int row=tblePedidos.getSelectedRow();
        
//            String clave = txtClave1.getText();
//            String update = "DELETE pedido  WHERE cvePedido='" + clave + "' ";
//            Statement st = con.createStatement();
//            st.executeUpdate(update);
         int op=0;
        if(row<0){
            JOptionPane.showMessageDialog(null,"Seleccionar un renglÃ³n"
                    ,"Mensaje de error",JOptionPane.ERROR_MESSAGE);
        }else{
             op=JOptionPane.showConfirmDialog(null,"Deseas eliminar"
                    ,"Mensaje de error",JOptionPane.ERROR_MESSAGE);
             if(op==JOptionPane.OK_OPTION){
             int clave= Integer.parseInt(tblePedidos.getValueAt(tblePedidos.getSelectedRow(), 0).toString());
             String update = "DELETE FROM pedido  WHERE cvePedido= "+clave;
             Statement st = con.createStatement();
         st.executeUpdate(update);
         
            ((DefaultTableModel)tblePedidos.getModel()).removeRow(row);
             }
        }
        
        } catch (SQLException ex) {
            Logger.getLogger(ViewPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
//            CardLayout layout = (CardLayout) panCards.getLayout();
//        
//        layout.show(panCards, "card4");

            String clave, call, num, coloni;
            clave = txtClave1.getText();
            call = txtCalle1.getText();
            num = txtNumero1.getText();
            coloni = cboColonia1.getSelectedItem().toString();

       
            ///hacer update
            AccessMySQL objCon = AccessMySQL.getInstance();
            //Paso 1 obtener la conexion
            Connection con = objCon.getConnection();
            //Paso 2 Crear un enunciado
            String update = "UPDATE pedido set calle='" + call + "', numero='" + num + "',colonia='" + coloni + "' WHERE cvePedido='" + clave + "' ";
            //ejemplo de un  "UPDATE pedido SET calle='algunaquesea',numero='35',colonia='jas' WHERE cvePedido=6;"
            Statement st = con.createStatement();
            st.executeUpdate(update);

        } catch (SQLException ex) {
            Logger.getLogger(ViewPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnModificarActionPerformed


    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed

        CardLayout layout = (CardLayout) (panCards.getLayout());
        layout.show(panCards, "card5");

        try {
            DefaultTableModel modeloTabla = new DefaultTableModel();
            this.tblePedidos.setModel(modeloTabla);
            AccessMySQL objCon = AccessMySQL.getInstance();
            //Paso 1 obtener la conexion
            Connection con = objCon.getConnection();
            //Paso 2 Crear un enunciado
            String consul = "SELECT cvePedido,fechaPedido, calle,numero,colonia,IDusuario FROM pedido  ";
            Statement st = con.createStatement();
            ResultSet rst = st.executeQuery(consul);
            ResultSetMetaData rsmd = (ResultSetMetaData) rst.getMetaData();
            int cantColum = rsmd.getColumnCount();
            for (int i = 1; i <= cantColum; i++) {
                modeloTabla.addColumn(rsmd.getColumnLabel(i));
            }
//Creando las filas para el JTable
            while (rst.next()) {
                Object[] fila = new Object[cantColum];
                for (int i = 0; i < cantColum; i++) {
                    fila[i] = rst.getObject(i + 1);
                }
                modeloTabla.addRow(fila);
            }
            rst.close();
            

        } catch (SQLException ex) {
            Logger.getLogger(ViewPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnListarActionPerformed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        char car = evt.getKeyChar();
        if (car < '0' || car > '9') {
            evt.consume();
        }


    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtCalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyTyped
        char car = evt.getKeyChar();
        if (!Character.isLetter(car)) {
            if (!Character.isSpaceChar(car) || txtCalle.getText().length() > 100) {
                getToolkit().beep();
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtCalleKeyTyped

    private void txtCalle1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalle1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCalle1KeyTyped

    private void txtNumero1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumero1KeyTyped

    private void btnPModiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPModiActionPerformed
        CardLayout layout = (CardLayout) panCards.getLayout();

        layout.show(panCards, "card4");
    }//GEN-LAST:event_btnPModiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnPModi;
    private javax.swing.JComboBox cboColonia;
    private javax.swing.JComboBox cboColonia1;
    private javax.swing.JComboBox cboUsuario;
    private javax.swing.JComboBox cboUsuario1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblEstatus;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panAgregar;
    private javax.swing.JPanel panBoton;
    private javax.swing.JPanel panCards;
    private javax.swing.JPanel panEliminar;
    private javax.swing.JPanel panEstatus;
    private javax.swing.JPanel panListar;
    private javax.swing.JPanel panModificar;
    private javax.swing.JPanel panOperadores;
    private javax.swing.JTable tblePedidos;
    private javax.swing.JTextArea txtCalle;
    private javax.swing.JTextArea txtCalle1;
    private javax.swing.JScrollPane txtCalleM;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtClave1;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFecha1;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtNumero1;
    // End of variables declaration//GEN-END:variables
}
